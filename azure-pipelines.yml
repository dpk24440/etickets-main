# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
trigger:
- main
resources:
- repo: self
variables:
- group: vprofilevariables
- name: tag
  value: '$(Build.BuildId)'
  
#pool:
 # Default
stages:
- stage: Sonar_Job
  jobs:
  - job: Sonar_Job
    pool:
      name: 'Azure Pipelines'  # Adjust the agent pool as needed
    steps:
    - checkout: self
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.x'
    
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Sonar Cloud'
        organization: 'vprofile-action240'
        scannerMode: 'MSBuild'
        projectKey: 'vprofile-action240_vprofile24'
        projectName: 'etickets'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'eTickets.sln'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: SonarCloudAnalyze@1
      inputs:
        jdkVersion: 'JAVA_HOME_17_X64'  # Adjust the JDK version if needed
    

- stage: Build_and_Push
  displayName: 'Build and Push Docker Image'
  dependsOn: Sonar_Job
  condition: succeeded()
  jobs:
    - job: Build_and_Push_Job
      displayName: 'Build and Push Docker Image to AWS ECR'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self

        - script: |
            echo "Build Info:"
            echo "Registry: $containerRegistry"
            echo "Repository: $imageRepository"
            echo "Tag: $tag"

            echo "Setting up AWS CLI..."
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_DEFAULT_REGION=$awsRegion

            echo "Authenticating with ECR..."
            aws ecr get-login-password --region $awsRegion | docker login --username AWS --password-stdin $containerRegistry

            echo "Building Docker image..."
            docker build -t $containerRegistry/$imageRepository:$tag .

            echo "Pushing Docker image to ECR..."
            docker push $containerRegistry/$imageRepository:$tag
          displayName: 'Run Build and Push'
          env:
            AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
            AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
            awsRegion: $(awsRegion)
            containerRegistry: $(containerRegistry)
            imageRepository: $(imageRepository)
            tag: $(tag)